Filtering int AlignChannels= 0 0 0 1 // align channels in time (0=no, 1=yes)
System string ApplicationIP= 172.16.10.16 127.0.0.1 127.0.0.1 127.0.0.1 // the Application module's listening IP
System string ApplicationPort= 2959 4200 1024 32768 // the Application module's listening port
Statistics matrix BaselineCfg= 2 2 TargetCode 1 TargetCode 2 0 0 0 // states to watch for baseline
Statistics matrix BaselineHits= 2 2 1 0.50 2 0.50 0 0 0 // proportion correct for each target
UsrTask int BaselineInterval= 1 0 0 2 // Intercept Computation 1 = targets 2 = ITI
UsrTask string BorderTexture= c:\data\bci2000\src\Application\shared\3DAPI\texture\Glass.bmp a z 0 // Path of border texture
3DEnvironment int CameraAimX= 0 0 0 32767 // Camera Aim X coordinate in the unit of +- 32767
3DEnvironment int CameraAimY= 0 0 0 32767 // Camera Aim Y coordinate in the unit of +- 32767
3DEnvironment int CameraAimZ= 0 0 0 32767 // Camera Aim Z coordinate in the unit of +- 32767
3DEnvironment int CameraX= 0 0 0 32767 // Camera X coordinate in the unit of +- 32767
3DEnvironment int CameraY= 0 0 0 32767 // Camera Y coordinate in the unit of +- 32767
3DEnvironment int CameraZ= 40959 40959 0 32767 // Camera Z coordinate in the unit of +- 32767
Filtering int ClassMode= 1 0 1 2 // Classifier mode 1= simple 2= interaction
UsrTask int CursorColorBack= 0x000000 0x000000 0x000000 0xFFFFFF // Cursor color when it is at the front of the workspace in the format of 0xRRGGBB
UsrTask int CursorColorFront= 0xFFFFFF 0x000000 0x000000 0xFFFFFF // Cursor color when it is at the front of the workspace in the format of 0xRRGGBB
UsrTask float CursorSize= 3 0 0 1 // User Window Cursor Size
UsrTask string CursorTexture= c:\data\bci2000\src\Application\shared\3DAPI\texture\Glass.bmp a z 0 // Path of cursor texture
Source int DCoffset= 0 0 -32767 32767 // DC offset (common to all channels)
MEMFilter float deltaMem= 0.2 0.2 0.02 2.00 // Resolution (line density)
Source int DoTrueRandom= 0 0 0 1 // Generate truely random sequence (0=no, 1=yes)
System string EEGSourceIP= 172.16.10.16 127.0.0.1 127.0.0.1 127.0.0.1 // the EEGSource module's listening IP
System string EEGSourcePort= 2957 4200 1024 32768 // the EEGSource module's listening port
UsrTask int FeedbackDuration= 20000 0 0 0 // Max Trial Duration
Storage string FileInitials= ..\data\ a z 0 // path to top level data directory
Targets int IncludeAllTargets= 0 0 0 1 // Test all target positions? 1=test all targets. 0=test only the visible current target
UsrTask int ItiDuration= 10 0 0 0 // Duration of Intertrial Interval
JoyStick float JoyXgain= 4.0 0 -1000.0 1000.0 // Horizontal gain
JoyStick float JoyYgain= 4.0 0 -1000.0 1000.0 // Vertical gain
JoyStick float JoyZgain= 1.0 0 -1000.0 1000.0 // Depth gain, should always be 1 to avoid float overflow error
3DEnvironment int LightSourceColorB= 127 0 0 255 // Light Source Color's Blue Value, range from 0~255
3DEnvironment int LightSourceColorG= 127 0 0 255 // Light Source Color's Green Value, range from 0~255
3DEnvironment int LightSourceColorR= 127 0 0 255 // Light Source Color's Red Value, range from 0~255
3DEnvironment int LightSourceintensity= 255 0 0 255 // Light Source Color's Intensity Value, range from 0~255
3DEnvironment int LightSourceX= 0 0 0 32767 // Light Source X coordinate in the unit of +- 32767
3DEnvironment int LightSourceY= 0 0 0 32767 // Light Source Y coordinate in the unit of +- 32767
3DEnvironment int LightSourceZ= 32767 0 0 32767 // Light Source Z coordinate in the unit of +- 32767
MEMFilter float MemBandWidth= 2 3.0 0.5 32.0 // Spectral Bandwidth in Hz
MEMFilter int MemDetrend= 1 0 0 2 // Detrend data?  0=no 1=mean 2= linear
MEMFilter int MemModelOrder= 10 10 2 32 // AR model order
MEMFilter int MemWindows= 8 2 1 8 // AR- number of input blocks
Filtering matrix MLR= 1 3 1 5 1 64 0 100 // Class Filter Left / Right Weights
Source int ModulateAmplitude= 1 0 0 1 // modulate the amplitude with the mouse (0=no, 1=yes)
Filtering matrix MUD= 1 3 4 5 -1 64 0 100 // Class Filter Additive Up / Down Weights
Source int NoiseMaxAmplitude= 3000 3000 -32767 32767 // the maximum output value for noise
Source int NoiseMinAmplitude= -3000 0 -32767 32767 // the minimal output value for noise
Targets int NumberTargets= 6 0 0 0 // Number of Targets
Filtering int NumControlSignals= 2 1 1 128 // the number of transmitted control signals
Statistics int OutcomeDirection= 1 0 1 2 // Direction of trial outcome statistic
UsrTask int PreTrialPause= 10 0 0 0 // Duration of Target w/o cursor
UsrTask int RestingPeriod= 0 0 0 1 // 1 defines a rest periuod of data acquisition
UsrTask int RewardDuration= 10 0 0 0 // Duration of PostTrial Feedback
Source int SampleBlockSize= 8 5 1 128 // the number of samples transmitted at a time
Source int SamplingRate= 256 128 1 4000 // the sample rate
Storage int SavePrmFile= 0 1 0 1 // 0/1: don't save/save additional parameter file
System string SignalProcessingIP= 172.16.10.16 127.0.0.1 127.0.0.1 127.0.0.1 // the SignalProcessing module's listening IP
System string SignalProcessingPort= 2961 4200 1024 32768 // the SignalProcessing module's listening port
Statistics int SignalWinLth= 3 0 0 1000 // Trials in Signal Running Average
Source int SineChannel= 4 0 0 128 // channel number of sinewave for y (0=all)
Source int SineChannelX= 1 0 0 128 // channel number of sinewave for x
Source float SineFrequency= 10 10 0 100 // frequency of the sine wave
Source int SineMaxAmplitude= 10000 20000 -32767 32767 // the maximum output value for sine
Source int SineMinAmplitude= -10000 0 -32767 32767 // the minimal output value for sine
Source int SoftwareCh= 16 16 1 128 // the number of digitized and stored channels
Filtering floatlist SourceChGain= 4 0.008 0.008 0.008 0.008 0.003 -500 500 // gain for each channel (A/D units -> muV)
Filtering floatlist SourceChOffset= 4 0 0 0 0 0 -500 500 // offset for channels in A/D units
Filtering floatlist SourceChTimeOffset= 1 -1 0 0 1 // time offset for all source channels (not used if -1)
Visualize int SourceMax= 8092 4096 0 16386 // raw signal vis Max Value
Visualize int SourceMin= 0 0 -8092 0 // raw signal vis Min Value
Filtering int SpatialFilteredChannels= 4 2 1 64 // Number of Spatially Filtered Channels
Filtering matrix SpatialFilterKernal= 4 4 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 64 -100 100 // Spatial Filter Kernal Weights
Targets float StartCursorX= 50.0 0 0 100.0 // Horizontal Start of Cursor
Targets float StartCursorY= 50.0 0 0 100.0 // Vertical Cursor Starting Position
Targets float StartCursorZ= 50.0 0 0 100.0 // Depth Cursor Starting Position
MEMFilter float StartMem= 1 0.0 0.0 512.0 // Start of Spectrum in Hz
System int StateVectorLength= 21 16 1 30 // length of the state vector in bytes
MEMFilter float StopMem= 60.0 30.0 0.0 512.0 // End of Spectrum in Hz
Storage string StorageTime= 16:15 Time a z // time of beginning of data storage
Storage string SubjectName= test Name a z // subject alias
Storage string SubjectRun= 01 00 0 0 // two-digit run number
Storage string SubjectSession= 001 001 0 0 // three-digit session number
Targets matrix TargetPos= 10 6 35 65 35 65 100 0 35 35 65 65 100 0 50 50 50 50 100 0 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 -1 1 -1 1 0 0 -1 -1 1 1 0 0 0 0 0 0 0 0 2 2 2 2 0 0 0 0 0 // 
UsrTask string TargetTexture= c:\data\bci2000\src\Application\shared\3DAPI\texture\Cube.bmp a z 0 // Path of target texture
Statistics int TargetWinLth= 20 0 0 100 // Length of Target % Window
UsrTask int TimeLimit= 180 180 0 1000 // Time Limit for Runs in seconds
Source int TransmitCh= 4 4 1 128 // the number of transmitted channels
Source intlist TransmitChList= 4 1 2 3 4 1 1 128 // list of transmitted channels
Statistics float TrendControlRate= 0.001 0 0.000 0.010 // Learning Rate for Linear Trend Control
JoyStick int UseJoyStick= 0 0 0 1 // 0=brain signals; 1=Joystick
Visualize int VisualizeCalibration= 0 0 0 1 // visualize calibrated channels (0=no, 1=yes)
Visualize int VisualizeClassFiltering= 1 0 0 1 // visualize Class filtered signals (0=no 1=yes)
Visualize int VisualizeNormalFiltering= 0 0 0 1 // visualize Normal filtered signals (0=no 1=yes)
Visualize int VisualizeRoundtrip= 1 1 0 1 // visualize roundtrip time (0=no, 1=yes)
Visualize int VisualizeSource= 1 1 0 1 // visualize raw brain signal (0=no, 1=yes)
Visualize int VisualizeSourceDecimation= 1 1 0 1 // decimation factor for raw brain signal
Visualize int VisualizeSourceTime= 2 2 0 5 // how much time in Source visualization
Visualize int VisualizeSpatialFiltering= 0 0 0 1 // visualize spatial filtered signals (0=no 1=yes)
Visualize int VisualizeStatFiltering= 0 0 0 1 // visualize Stat filtered signals (0=no 1=yes)
Visualize int VisualizeTemporalFiltering= 1 0 0 1 // visualize Temporal filtered signals (0=no 1=yes)
Statistics matrix WeightControl= 4 1 Xadapt Yadapt Zadapt AdaptCode 0 0 0 // State Names controlling Adaptation
Statistics int WeightUse= 0 0 0 2 // Use of weights 0 = not 1= compute 2= use 
UsrTask int WinHeight= 512 0 0 1 // User Window Height
UsrTask int WinWidth= 512 0 0 1 // User Window Width
UsrTask int WinXpos= 400 0 0 1 // User Window X location
UsrTask int WinYpos= 5 0 0 1 // User Window Y location
UsrTask int WorkspaceBoundaryVisible= 1 0 0 11 // 
Statistics float WtLrnRt= 0.001 0 0.000 0.010 // Rate of Learning for Classifier 
Statistics float XGain= 5 5.0 0.0 100.0 // Normal Filter Left/Right Slope
Statistics float XMean= 136.95 -5.0 -100.0 100.0 // Normal Filter Left/Right Intercept
Statistics float XMeanProportion= 1.0 0.0 0.0 2.0 // Proportion of horizontal signal intercept
JoyStick float XOffset= 0 0 -1000.0 1000.0 // horizontal offset for joystick/glove
Statistics float XPixelsPerSec= 0 70 0 400 // Horizontal Pixel Rate
Statistics int XTrendControl= 0 0 0 2 // X Intercept Adapt 0 none 1 mean 2 mean prop 3 slope
Statistics float YGain= 0.13 5.0 -100.0 100.0 // Normal Filter Up / Down Slope
Statistics float YMean= 0 5.0 -100.0 100.0 // Normal Filter Up / Down Intercept
Statistics float YMeanProportion= 1.0 0.0 0.0 2.0 // Proportion of signal mean for intercept
JoyStick float YOffset= 0 0 -1000.0 1000.0 // horizontal offset for joystick/glove
Statistics float YPixelsPerSec= 70 70 0 400 // Desired pixels per second
Statistics int YTrendControl= 0 0 0 2 // Y Intercept Adapt 0 none 1 mean 2 mean prop 3 slope
JoyStick float ZOffset= 0 0 -1000.0 1000.0 // depth offset for joystick/glove
