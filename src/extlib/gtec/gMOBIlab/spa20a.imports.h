// Import declarations for spa20a.h, generated by dylib_imports.sh
#ifndef spa20a_IMPORTS_H
#define spa20a_IMPORTS_H

#include "Win32Defs.h"

#if DYNAMIC_IMPORTS
#define GT_OpenDevice GT_OpenDevice_306c
#define GT_CloseDevice GT_CloseDevice_e5f9
#define GT_SetDigitalOut GT_SetDigitalOut_ce16
#define GT_InitChannels GT_InitChannels_4e30
#define GT_StartAcquisition GT_StartAcquisition_f5dd
#define GT_StopAcquisition GT_StopAcquisition_411f
#define GT_GetData GT_GetData_c54e
#define GT_GetLastError GT_GetLastError_bc18
#define GT_TranslateErrorCode GT_TranslateErrorCode_4796
#endif // DYNAMIC_IMPORTS

#include "spa20a.h"

#if DYNAMIC_IMPORTS
#undef GT_OpenDevice
#undef GT_CloseDevice
#undef GT_SetDigitalOut
#undef GT_InitChannels
#undef GT_StartAcquisition
#undef GT_StopAcquisition
#undef GT_GetData
#undef GT_GetLastError
#undef GT_TranslateErrorCode

extern "C" {
extern HANDLE (__stdcall *GT_OpenDevice)(LPSTR lpPort);
extern BOOL (__stdcall *GT_CloseDevice)(HANDLE hDevice);
extern BOOL (__stdcall *GT_SetDigitalOut)(HANDLE hDevice,int dout_number, int value);
extern BOOL (__stdcall *GT_InitChannels)(HANDLE hDevice,_AIN analogCh,_DIO digitalCh);
extern BOOL (__stdcall *GT_StartAcquisition)(HANDLE hDevice);
extern BOOL (__stdcall *GT_StopAcquisition)(HANDLE hDevice);
extern BOOL (__stdcall *GT_GetData)(HANDLE hDevice,_BUFFER_ST *buffer,LPOVERLAPPED lpOvl);
extern BOOL (__stdcall *GT_GetLastError)(UINT * LastError);
extern BOOL (__stdcall *GT_TranslateErrorCode)(_ERRSTR *ErrorString, UINT ErrorCode);
}
#endif // DYNAMIC_IMPORTS

namespace Dylib { bool spa20a_Loaded(); }

#endif // spa20a_IMPORTS_H
