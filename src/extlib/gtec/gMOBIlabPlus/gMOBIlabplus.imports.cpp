// Import definitions for gMOBIlabPlus.h, generated by dylib_imports.sh
#include "gMOBIlabPlus.imports.h"
#include "DylibImports.h"

#if !DYNAMIC_IMPORTS

namespace Dylib { bool gMOBIlabPlus_Loaded() { return true; } }

#else // DYNAMIC_IMPORTS

extern "C" {
HANDLE (__stdcall *GT_OpenDevice)(LPSTR lpPort) = 0;
BOOL (__stdcall *GT_CloseDevice)(HANDLE hDevice) = 0;
BOOL (__stdcall *GT_SetDigitalOut)(HANDLE hDevice, UCHAR dout) = 0;
BOOL (__stdcall *GT_InitChannels)(HANDLE hDevice,_AIN analogCh,_DIO digitalCh) = 0;
BOOL (__stdcall *GT_StartAcquisition)(HANDLE hDevice) = 0;
BOOL (__stdcall *GT_StopAcquisition)(HANDLE hDevice) = 0;
BOOL (__stdcall *GT_GetData)(HANDLE hDevice,_BUFFER_ST *buffer,LPOVERLAPPED lpOvl) = 0;
BOOL (__stdcall *GT_GetConfig)(HANDLE hdevice, __CFG * cfg) = 0;
BOOL (__stdcall *GT_SetFilename)(HANDLE hDevice, LPSTR FileName, int length) = 0;
BOOL (__stdcall *GT_PauseXfer)(HANDLE hDevice) = 0;
BOOL (__stdcall *GT_ResumeXfer)(HANDLE hDevice) = 0;
BOOL (__stdcall *GT_EnableSDcard)(HANDLE hDevice, BOOL enSDcard) = 0;
BOOL (__stdcall *GT_GetDeviceStatus)(HANDLE hDevice, __DEVICESTATE * DevState) = 0;
BOOL (__stdcall *GT_GetSDcardStatus)(HANDLE hDevice, UINT * SDStatus) = 0;
BOOL (__stdcall *GT_SetTestmode)(HANDLE hDevice, BOOL Testmode) = 0;
float (__stdcall *GT_GetDriverVersion)() = 0;
BOOL (__stdcall *GT_GetLastError)(UINT * LastError) = 0;
BOOL (__stdcall *GT_TranslateErrorCode)(_ERRSTR *ErrorString, UINT ErrorCode) = 0;
}

static const Dylib::Import imports[] =
{
  { "GT_OpenDevice", (void**)&GT_OpenDevice, Dylib::Import::cMangled },
  { "GT_CloseDevice", (void**)&GT_CloseDevice, Dylib::Import::cMangled },
  { "GT_SetDigitalOut", (void**)&GT_SetDigitalOut, Dylib::Import::cMangled },
  { "GT_InitChannels", (void**)&GT_InitChannels, Dylib::Import::cMangled },
  { "GT_StartAcquisition", (void**)&GT_StartAcquisition, Dylib::Import::cMangled },
  { "GT_StopAcquisition", (void**)&GT_StopAcquisition, Dylib::Import::cMangled },
  { "GT_GetData", (void**)&GT_GetData, Dylib::Import::cMangled },
  { "GT_GetConfig", (void**)&GT_GetConfig, Dylib::Import::cMangled },
  { "GT_SetFilename", (void**)&GT_SetFilename, Dylib::Import::cMangled },
  { "GT_PauseXfer", (void**)&GT_PauseXfer, Dylib::Import::cMangled },
  { "GT_ResumeXfer", (void**)&GT_ResumeXfer, Dylib::Import::cMangled },
  { "GT_EnableSDcard", (void**)&GT_EnableSDcard, Dylib::Import::cMangled },
  { "GT_GetDeviceStatus", (void**)&GT_GetDeviceStatus, Dylib::Import::cMangled },
  { "GT_GetSDcardStatus", (void**)&GT_GetSDcardStatus, Dylib::Import::cMangled },
  { "GT_SetTestmode", (void**)&GT_SetTestmode, Dylib::Import::cMangled },
  { "GT_GetDriverVersion", (void**)&GT_GetDriverVersion, Dylib::Import::cMangled },
  { "GT_GetLastError", (void**)&GT_GetLastError, Dylib::Import::cMangled },
  { "GT_TranslateErrorCode", (void**)&GT_TranslateErrorCode, Dylib::Import::cMangled },
  { 0, 0, 0 }
};

// Here you may specify a custom error message to be displayed when the library cannot be found.
static const char* notFoundMsg = "";
// Here you may specify an URL to some local or remote help resource.
static const char* notFoundURL = "";
RegisterDylib( gMOBIlabPlus, imports, notFoundMsg, notFoundURL );

#endif // DYNAMIC_IMPORTS
