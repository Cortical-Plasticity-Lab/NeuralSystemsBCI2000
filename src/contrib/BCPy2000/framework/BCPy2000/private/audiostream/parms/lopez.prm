PythonSig:Streams                             int       NumberOfStreams=          2                     //
PythonApp:Streams                             floatlist PeriodMsec=               2     250      250    // period of stimuli for each stream in msec
PythonApp:Streams                             floatlist OffsetMsec=               2       0      125    // offset of each stimulus stream in msec
PythonSig:Streams                             intlist   MinTargets=               2       0        0    // 
PythonSig:Streams                             intlist   MaxTargets=               2       0        0    // 
PythonSig:Streams                             matrix    StreamStimuli=         20 1 AmericanHistoryX/AmericanHistoryX_250_63_000-004.wav AmericanHistoryX/AmericanHistoryX_250_63_004-008.wav AmericanHistoryX/AmericanHistoryX_250_63_008-012.wav AmericanHistoryX/AmericanHistoryX_250_63_012-016.wav AmericanHistoryX/AmericanHistoryX_250_63_016-020.wav AmericanHistoryX/AmericanHistoryX_250_63_020-024.wav AmericanHistoryX/AmericanHistoryX_250_63_024-028.wav AmericanHistoryX/AmericanHistoryX_250_63_028-032.wav AmericanHistoryX/AmericanHistoryX_250_63_032-036.wav AmericanHistoryX/AmericanHistoryX_250_63_036-040.wav AmericanHistoryX/AmericanHistoryX_250_63_040-044.wav AmericanHistoryX/AmericanHistoryX_250_63_044-048.wav AmericanHistoryX/AmericanHistoryX_250_63_048-052.wav AmericanHistoryX/AmericanHistoryX_250_63_052-056.wav AmericanHistoryX/AmericanHistoryX_250_63_056-060.wav AmericanHistoryX/AmericanHistoryX_250_63_060-064.wav AmericanHistoryX/AmericanHistoryX_250_63_064-068.wav AmericanHistoryX/AmericanHistoryX_250_63_068-072.wav AmericanHistoryX/AmericanHistoryX_250_63_072-076.wav AmericanHistoryX/AmericanHistoryX_250_63_076-080.wav AmericanHistoryX/AmericanHistoryX_250_63_080-084.wav AmericanHistoryX/AmericanHistoryX_250_63_084-088.wav AmericanHistoryX/AmericanHistoryX_250_63_088-092.wav AmericanHistoryX/AmericanHistoryX_250_63_092-096.wav AmericanHistoryX/AmericanHistoryX_250_63_096-100.wav AmericanHistoryX/AmericanHistoryX_250_63_100-104.wav AmericanHistoryX/AmericanHistoryX_250_63_104-108.wav AmericanHistoryX/AmericanHistoryX_250_63_108-112.wav AmericanHistoryX/AmericanHistoryX_250_63_112-116.wav AmericanHistoryX/AmericanHistoryX_250_63_116-120.wav AmericanHistoryX/AmericanHistoryX_250_63_120-124.wav AmericanHistoryX/AmericanHistoryX_250_63_124-128.wav AmericanHistoryX/AmericanHistoryX_250_63_128-132.wav AmericanHistoryX/AmericanHistoryX_250_63_132-136.wav AmericanHistoryX/AmericanHistoryX_250_63_136-140.wav AmericanHistoryX/AmericanHistoryX_250_63_140-144.wav AmericanHistoryX/AmericanHistoryX_250_63_144-148.wav AmericanHistoryX/AmericanHistoryX_250_63_148-152.wav AmericanHistoryX/AmericanHistoryX_250_63_152-156.wav AmericanHistoryX/AmericanHistoryX_250_63_156-160.wav AmericanHistoryX/AmericanHistoryX_250_63_160-164.wav AmericanHistoryX/AmericanHistoryX_250_63_164-168.wav AmericanHistoryX/AmericanHistoryX_250_63_168-172.wav AmericanHistoryX/AmericanHistoryX_250_63_172-176.wav
PythonSig:Streams                             int       SurroundSoundTrigger=             1             // if checked, deliver the trigger signal in sound channels 3 and 4 (boolean)
PythonSig:Streams                             int       DirectSound=                      1             // use DirectSound interface or not? (boolean)

PythonApp:Task                                intlist   BeatsPerTrial=            1      14             //
PythonApp:Task                                int       FreeChoice=                       0             // allow user to choose freely? (boolean)
PythonApp:Task                                int       ShowCountFeedback=                0             // show correct counts after each trial? (boolean)

PythonSig:Epoch                               floatlist EpochLowerBoundMsec=      2     150      150    // after springing, each ERP trap will not spring again for this many milliseconds
PythonSig:Epoch                               list      TriggerChannels=          2    AUDL     AUDR    // 
PythonSig:Epoch                               floatlist TriggerThreshold=         2   50000    50000    // 
PythonSig:Epoch                               float     TriggerHPCutoff=                  0.0           // 
PythonSig:Epoch                               float     TriggerHPOrder=                   4             // 
PythonSig:Epoch                               float     TriggerlessOffsetMsec=           50.0           // used to compensate for stimulus output latency to make weights from triggered and triggerless versions as compatible as possible
