Source:Signal%20Properties:DataIOFilter       list      ReferenceChannelName=     0       %           // list of labels for reference channel or channels
Source:Signal%20Properties:DataIOFilter       list      GroundChannelName=        1     FzA           // label of the ground channel
Source:Signal%20Properties:DataIOFilter       list      ChannelNames=            73      F7       F5       F3       F1       Fz       F2       F4       F6       F8      FT7      FC5      FC3      FC1      FCz      FC2      FC4      FC6      FT8       T7       C5       C3       C1       Cz       C2       C4       C6       T8      TP7      CP5      CP3      CP1      CPz      CP2      CP4      CP6      TP8       P7       P5       P3       P1       Pz       P2       P4       P6       P8      P7P      P3P      PzP      P4P      P8P      O9A       O1       Oz       O2     O10A       O9       Iz      O10      TP9     TP10      Fp1      Fpz      Fp2      F7A      F3A      F4A      F8A      EU1      EO1      EL1     AUDL     AUDR     VMRK   // list of channel names
Source:Signal%20Properties:DataIOFilter       floatlist SourceChOffset=          73       0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0        0   // Offset for channels in A/D units
Source:Signal%20Properties:DataIOFilter       floatlist SourceChGain=            73       0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   0.0715   1.43     1.43     1   // gain for each channel (A/D units -> muV)
Source:Online%20Processing:TransmissionFilter list      TransmitChList=          73       1        2        3        4        5        6        7        8        9       10       11       12       13       14       15       16       17       18       19       20       21       22       23       24       25       26       27       28       29       30       31       32       33       34       35       36       37       38       39       40       41       42       43       44       45       46       47       48       49       50       51       52       53       54       55       56       57       58       59       60       61       62       63       64       65       66       67       68       69       70       71       72       73   // list of transmitted channels
Source:Signal%20Properties:TMSiADC            list      PhysicalChannels=        73      14       15       16       17       18       19       20       21       22       32       33       34       35       36       37       38       39       40       51       52       53       54       121      55      56        57       58       69       70       71       72       73       74       75       76       77       88       89       90       91       92       93       94       95       96       103      104      105      106      107      111      112      113      114      115      118      119      120      68       78       1        2        3        6        7        8        9       122      124      128      135      136      137   // physical channel numbers in QuickAmp

Source:Signal%20Properties:DataIOFilter       int       SourceCh=                        73           // number of digitized and stored channels

Filtering:SpatialFilter                       int       SpatialFilterType=                2           // spatial filter type 0: none, 1: full matrix, 2: sparse matrix, 3: common average reference (CAR) (enumeration)
Filtering:SpatialFilter:SpatialFilter         intlist   SpatialFilterCAROutput=   0       %           // list of output channels for the CAR if used
Filtering:SpatialFilter                       matrix    SpatialFilter= 207 { In Out Wt } F7 F7 1 F5 F5 1 F3 F3 1 F1 F1 1 Fz Fz 1 F2 F2 1 F4 F4 1 F6 F6 1 F8 F8 1 FT7 FT7 1 FC5 FC5 1 FC3 FC3 1 FC1 FC1 1 FCz FCz 1 FC2 FC2 1 FC4 FC4 1 FC6 FC6 1 FT8 FT8 1 T7 T7 1 C5 C5 1 C3 C3 1 C1 C1 1 Cz Cz 1 C2 C2 1 C4 C4 1 C6 C6 1 T8 T8 1 TP7 TP7 1 CP5 CP5 1 CP3 CP3 1 CP1 CP1 1 CPz CPz 1 CP2 CP2 1 CP4 CP4 1 CP6 CP6 1 TP8 TP8 1 P7 P7 1 P5 P5 1 P3 P3 1 P1 P1 1 Pz Pz 1 P2 P2 1 P4 P4 1 P6 P6 1 P8 P8 1 P7P P7P 1 P3P P3P 1 PzP PzP 1 P4P P4P 1 P8P P8P 1 O9A O9A 1 O1 O1 1 Oz Oz 1 O2 O2 1 O10A O10A 1 O9 O9 1 Iz Iz 1 O10 O10 1 Fp1 Fp1 1 Fpz Fpz 1 Fp2 Fp2 1 F7A F7A 1 F3A F3A 1 F4A F4A 1 F8A F8A 1 TP9 F7 -0.5 TP9 F5 -0.5 TP9 F3 -0.5 TP9 F1 -0.5 TP9 Fz -0.5 TP9 F2 -0.5 TP9 F4 -0.5 TP9 F6 -0.5 TP9 F8 -0.5 TP9 FT7 -0.5 TP9 FC5 -0.5 TP9 FC3 -0.5 TP9 FC1 -0.5 TP9 FCz -0.5 TP9 FC2 -0.5 TP9 FC4 -0.5 TP9 FC6 -0.5 TP9 FT8 -0.5 TP9 T7 -0.5 TP9 C5 -0.5 TP9 C3 -0.5 TP9 C1 -0.5 TP9 Cz -0.5 TP9 C2 -0.5 TP9 C4 -0.5 TP9 C6 -0.5 TP9 T8 -0.5 TP9 TP7 -0.5 TP9 CP5 -0.5 TP9 CP3 -0.5 TP9 CP1 -0.5 TP9 CPz -0.5 TP9 CP2 -0.5 TP9 CP4 -0.5 TP9 CP6 -0.5 TP9 TP8 -0.5 TP9 P7 -0.5 TP9 P5 -0.5 TP9 P3 -0.5 TP9 P1 -0.5 TP9 Pz -0.5 TP9 P2 -0.5 TP9 P4 -0.5 TP9 P6 -0.5 TP9 P8 -0.5 TP9 P7P -0.5 TP9 P3P -0.5 TP9 PzP -0.5 TP9 P4P -0.5 TP9 P8P -0.5 TP9 O9A -0.5 TP9 O1 -0.5 TP9 Oz -0.5 TP9 O2 -0.5 TP9 O10A -0.5 TP9 O9 -0.5 TP9 Iz -0.5 TP9 O10 -0.5 TP9 OLDREF -0.5 TP9 TP10 -0.5 TP9 Fp1 -0.5 TP9 Fpz -0.5 TP9 Fp2 -0.5 TP9 F7A -0.5 TP9 F3A -0.5 TP9 F4A -0.5 TP9 F8A -0.5 TP10 F7 -0.5 TP10 F5 -0.5 TP10 F3 -0.5 TP10 F1 -0.5 TP10 Fz -0.5 TP10 F2 -0.5 TP10 F4 -0.5 TP10 F6 -0.5 TP10 F8 -0.5 TP10 FT7 -0.5 TP10 FC5 -0.5 TP10 FC3 -0.5 TP10 FC1 -0.5 TP10 FCz -0.5 TP10 FC2 -0.5 TP10 FC4 -0.5 TP10 FC6 -0.5 TP10 FT8 -0.5 TP10 T7 -0.5 TP10 C5 -0.5 TP10 C3 -0.5 TP10 C1 -0.5 TP10 Cz -0.5 TP10 C2 -0.5 TP10 C4 -0.5 TP10 C6 -0.5 TP10 T8 -0.5 TP10 TP7 -0.5 TP10 CP5 -0.5 TP10 CP3 -0.5 TP10 CP1 -0.5 TP10 CPz -0.5 TP10 CP2 -0.5 TP10 CP4 -0.5 TP10 CP6 -0.5 TP10 TP8 -0.5 TP10 P7 -0.5 TP10 P5 -0.5 TP10 P3 -0.5 TP10 P1 -0.5 TP10 Pz -0.5 TP10 P2 -0.5 TP10 P4 -0.5 TP10 P6 -0.5 TP10 P8 -0.5 TP10 P7P -0.5 TP10 P3P -0.5 TP10 PzP -0.5 TP10 P4P -0.5 TP10 P8P -0.5 TP10 O9A -0.5 TP10 O1 -0.5 TP10 Oz -0.5 TP10 O2 -0.5 TP10 O10A -0.5 TP10 O9 -0.5 TP10 Iz -0.5 TP10 O10 -0.5 TP10 OLDREF -0.5 TP10 TP10 0.5 TP10 Fp1 -0.5 TP10 Fpz -0.5 TP10 Fp2 -0.5 TP10 F7A -0.5 TP10 F3A -0.5 TP10 F4A -0.5 TP10 F8A -0.5 EU1 EV1 1 EU1 EH1 -0.5 EO1 EH1 1 EL1 EV1 -1 EL1 EH1 -0.5 AUDL AUDL 0.001 AUDR AUDR 0.001 VMRK VMRK 1 // 

Source:Signal%20Properties:DataIOFilter       int       SamplingRate=                   500Hz         // sample rate
Source:Signal%20Properties:DataIOFilter       int       SampleBlockSize=                 20           // number of samples transmitted at a time

Storage:Data%20Location:DataIOFilter          string    DataDirectory=              ..\data           // path to top level data directory (directory)
Storage:Session:DataIOFilter                  string    SubjectName=           AUDIOSTREAM_           // subject alias
Storage:Session:DataIOFilter                  string    SubjectSession=                 001           // three-digit session number
Storage:Session:DataIOFilter                  string    SubjectRun=                      00           // two-digit run number

Storage:Documentation:BCI2000FileWriter       int       SavePrmFile=                      0           // save additional parameter file (0=no, 1=yes) (boolean)
Source:Alignment:AlignmentFilter              int       AlignChannels=                    0           // align channels in time (0=no, 1=yes)
Source:Alignment:AlignmentFilter              floatlist SourceChTimeOffset=       0       %           // time offsets for all source channels (may be empty)

Visualize:Timing:DataIOFilter                 int       VisualizeTiming=                  0           // visualize system timing (0=no, 1=yes) (boolean)
Visualize:Source%20Signal:DataIOFilter        int       VisualizeSource=                  0           // visualize raw brain signal (0=no, 1=yes) (boolean)
Visualize:Source%20Signal:DataIOFilter        int       VisualizeSourceDecimation=        1           // decimation factor for raw brain signal
Visualize:Source%20Signal:DataIOFilter        int       VisualizeSourceTime=             10s          // how much time in Source visualization
Visualize:Source%20Signal:DataIOFilter        int       SourceMin=                      -50muV        // raw signal vis Min Value
Visualize:Source%20Signal:DataIOFilter        int       SourceMax=                       50muV        // raw signal vis Max Value
Visualize:Processing%20Stages                 int       VisualizeAlignmentFilter=         0           // Visualize AlignmentFilter output (boolean)
Visualize:Processing%20Stages                 int       VisualizeTransmissionFilter=      0           // Visualize TransmissionFilter output (boolean)
Visualize:Processing%20Stages                 int       VisualizeSpatialFilter=           0           // Visualize SpatialFilter output (boolean)
Visualize:Processing%20Stages                 int       VisualizePythonSigFilter=         0           // Visualize PythonSigFilter output (boolean)
Visualize:Processing%20Stages                 int       VisualizePythonAppFilter=         0           // Visualize PythonAppFilter output (boolean)

Source:Playback                               int       EnslavePython=                    0           // force BCPy2000 modules to follow states supplied by the source module without being able to change them (boolean)
PythonApp:Design                              int       TrialsPerBlock=                  20           // number of trials in one block
PythonApp:Design                              int       BlocksPerRun=                     1           // number of sub-blocks in one run
PythonApp                                     int       ShowSignalTime=                   0           // show a timestamp based on the number of processed samples (boolean)

PythonApp                                     int       FreeChoice=                       0           // allow user to choose freely (boolean)
PythonApp                                     int       SurroundSoundTrigger=             1           // if checked, deliver the trigger signal in sound channels 3 and 4 (boolean)
PythonApp                                     int       LowerStimulusThreadPriority=      1           // if checked, try to lower the priority of the stimulus factory thread (boolean)

PythonApp:Streams                             float     MinPropTargets=                 0.1           // minimum number of targets, as a proportion of the largest number of variable beats among streams
PythonApp:Streams                             float     MaxPropTargets=                 0.8           // maximum number of targets, as a proportion of the smallest number of variable beats among streams


PythonApp:Streams  int       NumberOfStreams=                                                 2                                                                          // number of streams
PythonApp:Streams  floatlist PeriodMsec=                                              2     500     550                                                                  // period of stimuli for each stream in msec
PythonApp:Streams  floatlist OffsetMsec=                                              2     500     600                                                                  // offset of each stimulus stream in msec
PythonApp:Streams  floatlist InitialStandards=                                        2       3       3                                                                  // how many stimuli at the beginning of each stream are guaranteed to be standards
PythonApp:Streams  intlist   NumberOfDeviants=                                        2       0       0                                                                  // number of deviants in each stream

PythonApp          float     SystemMasterVolume=                                              0.3     // operating-system volume setting
PythonApp:Streams  matrix    AudioMixingMatrix=                                     2 2       1.0     0.0         0.0     1.0                                            // audio mixing matrix (outputs by inputs)

PythonApp:Streams  int       RoundPeriods=                                                    2                                                                          // stream period rounding: 0 no rounding, 1 adjust to an integer number of carrier cycles, 2 adjust to an integer number of modulation cycles (enumeration)
PythonApp:Streams  int       RoundModFreq=                                                    0                                                                          // modulation frequency rounding: 0 no rounding, 1 integer number of cycles per beat (enumeration)
PythonApp:Streams  int       RoundCarrierFreq=                                                1                                                                          // carrier frequency rounding: 0 no rounding, 1 integer number of cycles per beat, 2 integer number of cycles per modulation cycle (enumeration)
PythonApp:Streams  int       RoundOffsets=                                                    2                                                                          // stream SOA rounding: 0 no rounding, 1 adjust to an integer number of carrier cycles, 2 adjust to an integer number of modulation cycles (enumeration)
PythonApp:Streams  int       RoundDurations=                                                  0                                                                          // pulse duration rounding: 0 no rounding, 1 adjust to an integer number of carrier cycles, 2 adjust to an integer number of modulation cycles (enumeration)

PythonApp:Streams  matrix    Amplitude=        { Background Standard Target Deviant } 2       0.3     0.3         1.0     1.0         1.0     1.0         1.0     1.0    // amplitude of each stimulus (types by streams)
PythonApp:Streams  matrix    DurationMsec=     { Background Standard Target Deviant } 2    5000.0  5000.0       100.0   100.0       180.0   180.0       100.0   100.0    // duration of each stimulus pulse (types by streams)
PythonApp:Streams  matrix    AttackMsec=       { Background Standard Target Deviant } 2     250.0   250.0         5.0     5.0         5.0     5.0         5.0     5.0    // rise time of each stimulus pulse (types by streams)
PythonApp:Streams  matrix    DecayMsec=        { Background Standard Target Deviant } 2     100.0   100.0        50.0    50.0        50.0    50.0        50.0    50.0    // fall time of each stimulus pulse (types by streams)
PythonApp:Streams  matrix    CarrierType=      { Background Standard Target Deviant } 2    square  square      square  square      square  square      square  square    // (types by streams)
PythonApp:Streams  matrix    CarrierFreqHz=    { Background Standard Target Deviant } 2    1500.0   800.0      1500.0   800.0      1500.0   800.0      1500.0   800.0    // (types by streams)
PythonApp:Streams  matrix    ModulationType=   { Background Standard Target Deviant } 2      sine    sine        sine    sine        sine    sine        sine    sine    // (types by streams)
PythonApp:Streams  matrix    ModulationFreqHz= { Background Standard Target Deviant } 2      40.0    60.0        40.0    60.0        40.0    60.0        40.0    60.0    // (types by streams)
PythonApp:Streams  matrix    ModulationDepth=  { Background Standard Target Deviant } 2       1.0     1.0         1.0     1.0         1.0     1.0         1.0     1.0    // (types by streams)

PythonSig:Epoch                               float     TriggerHPCutoff=                  0.0         // 
PythonSig:Epoch                               int       ERPFilterOrder=                   6           // order of bandpass filter for ERP feature set
PythonSig:Epoch                               floatlist ERPFilterFreqHz=          2       0.1    8.0  // lower and upper frequencies of bandpass filter for ERP feature set
PythonSig:Epoch                               list      TriggerChannels=          2    AUDL   AUDR    // 
PythonSig:Epoch                               floatlist TriggerThreshold=         2     100    100    // 
PythonSig:Epoch                               floatlist EpochLowerBoundMsec=      2     200    200    // after springing, each ERP trap will not spring again for this many milliseconds
PythonSig:Epoch                               intlist   DiscardEpochs=            2       2      2    // for classification, discard this many epochs at the beginning
PythonSig:Epoch                               float     EpochDurationMsec=              600           // 
PythonSig:Epoch                               float     ERPClassifierBias=                0.0         // 
PythonSig:Epoch                               matrix    ERPClassifierWeights=   0 1       %           // 
PythonSig:Epoch                               int       DiffFeatureSets=                  1           // for 2-stream designs, whether to use the difference between the two feature sets (boolean)

