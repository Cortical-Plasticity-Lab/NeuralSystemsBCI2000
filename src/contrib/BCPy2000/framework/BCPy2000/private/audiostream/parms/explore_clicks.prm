Storage:Session:DataIOFilter                  string    SubjectSession=                     004           // three-digit session number
PythonApp                                     string    ApplicationDescription=             clicks        // Identifies the stimulus presentation module

PythonApp:Streams  int       NumberOfStreams=                                                 2                                                                                 // number of streams
PythonApp:Streams  floatlist PeriodMsec=                                              2     500      556                                                                        // period of stimuli for each stream in msec
PythonApp:Streams  floatlist OffsetMsec=                                              2     500      603                                                                        // offset of each stimulus stream in msec
PythonApp:Streams  floatlist InitialStandards=                                        2       3        3                                                                        // how many stimuli at the beginning of each stream are guaranteed to be standards
PythonApp:Streams  intlist   NumberOfDeviants=                                        2       0        0                                                                        // number of deviants in each stream

PythonSig:Epoch    floatlist TriggerThreshold=                                        2     100      100                                                                        // 
PythonSig:Epoch    floatlist EpochLowerBoundMsec=                                     2     200      200                                                                        // after springing, each ERP trap will not spring again for this many milliseconds",
PythonApp:Streams  float     EpochDurationMsec=                                             600                                                                                 // 

PythonApp          int       SurroundSoundTrigger=                                            1                                                                                 // if checked, deliver the trigger signal in sound channels 3 and 4 (boolean)

PythonApp          int       HeadPhones=                                                      1           // use headphones or not? (boolean)
PythonApp:Streams  matrix    AudioMixingMatrix=                                     2 2       1.0      0.0         0.0     1.0                                                  // audio mixing matrix (outputs by inputs)

PythonApp:Streams  matrix    Amplitude=        { Background Standard Target Deviant } 2       0.3     0.3         0.8     0.8         1.0     1.0         1.0     1.0    // amplitude of each stimulus (types by streams)
PythonApp:Streams  matrix    DurationMsec=     { Background Standard Target Deviant } 2    5000.0  5000.0       100.0   100.0       180.0   180.0       100.0   100.0    // duration of each stimulus pulse (types by streams)
PythonApp:Streams  matrix    AttackMsec=       { Background Standard Target Deviant } 2     250.0   250.0         5.0     5.0         5.0     5.0         5.0     5.0    // rise time of each stimulus pulse (types by streams)
PythonApp:Streams  matrix    DecayMsec=        { Background Standard Target Deviant } 2     100.0   100.0        50.0    50.0        50.0    50.0        50.0    50.0    // fall time of each stimulus pulse (types by streams)
PythonApp:Streams  matrix    CarrierType=      { Background Standard Target Deviant } 2   sawtooth    sawtooth        sawtooth    sawtooth        sawtooth    sawtooth        sawtooth    sawtooth    // (types by streams)
PythonApp:Streams  matrix    CarrierFreqHz=    { Background Standard Target Deviant } 2     840.0  1260.0       840.0  1260.0       840.0  1260.0       840.0  1260.0    // (types by streams)
PythonApp:Streams  matrix    ModulationFreqHz= { Background Standard Target Deviant } 2      42.0    63.0        42.0    63.0        42.0    63.0        42.0    63.0    // (types by streams)
PythonApp:Streams  matrix    ModulationType=   { Background Standard Target Deviant } 2    square(0.05)  square(0.05)      square(0.05)  square(0.05)      square(0.05)  square(0.05)      square(0.05)  square(0.05)    // (types by streams)
PythonApp:Streams  matrix    ModulationDepth=  { Background Standard Target Deviant } 2       1.0     1.0         1.0     1.0         1.0     1.0         1.0     1.0    // (types by streams)

PythonApp:Streams  int       RoundPeriods=                                                    2                                                                                 // stream period rounding: 0 no rounding, 1 adjust to an integer number of carrier cycles, 2 adjust to an integer number of modulation cycles (enumeration)
PythonApp:Streams  int       RoundModFreq=                                                    0                                                                                 // modulation frequency rounding: 0 no rounding, 1 integer number of cycles per beat (enumeration)
PythonApp:Streams  int       RoundCarrierFreq=                                                2                                                                                 // carrier frequency rounding: 0 no rounding, 1 integer number of cycles per beat, 2 integer number of cycles per modulation cycle (enumeration)
PythonApp:Streams  int       RoundOffsets=                                                    2                                                                                 // stream offset rounding: 0 no rounding, 1 adjust to an integer number of carrier cycles, 2 adjust to an integer number of modulation cycles (enumeration)
PythonApp:Streams  int       RoundDurations=                                                  0                                                                                 // pulse duration rounding: 0 no rounding, 1 adjust to an integer number of carrier cycles, 2 adjust to an integer number of modulation cycles (enumeration)
