There will be one set of sounds directed to your right ear and a different set of sounds directed to your left ear.

Let's start with just the left ear. The sounds in your left ear will sound like this:

>>> self.standards[0].play()

and

>>> self.targets[0].play()

Notice that one sound is rough while the other sound is smoother.

>>> self.standards[0].play()
>>> self.targets[0].play()
>>> self.standards[0].play()
>>> self.targets[0].play()
>>> self.standards[0].play()
>>> self.targets[0].play()

During the listening task, the beeps will be repeated many times one after the other.  Most of these will be rough beeps, but there will be just a few smooth beeps along the way.

This is an example of the chain of beeps you will hear in your left ear:

>>> self.play('left')

Listen to the chain of beeps again. Try to notice the difference between the two types of sounds, rough and smooth.

There will be {two} smooth sounds
>>> self.play('left')

We'll play another example.  This time there will be a different number of smooth beeps.
>>> self.play('left')
That time there was {one} smooth sound.


Something similar will also be happening in the right ear:

The sounds in your right ear will sound like this:
>>> self.standards[1].play()
and 
>>> self.targets[1].play()


Notice that one sound is rough while the other sound is smoother.

>>> self.standards[1].play()
>>> self.targets[1].play()
>>> self.standards[1].play()
>>> self.targets[1].play()
>>> self.standards[1].play()
>>> self.targets[1].play()

During the listening task, the beeps will be repeated many times one after the other.  Most of these will be rough beeps, but there will be just a few smooth beeps along the way.

This is an example of the chain of beeps you will hear in your right ear:

>>> self.play('right')

Listen to the chain of beeps again. Try to notice the difference between the two types of sounds, rough and smooth.

There will be {two} smooth sounds
>>> self.play('right')

We'll play another example.  This time there will be a different number of smooth beeps.
>>> self.play('right')
That time there were {three} smooth sounds.

----introduce both Left and Right ----

We have listened to the sounds in each ear, let's hear them played in both ears.

>>> self.play('both')

Your job will be to count the smooth beeps on just one side, and ignore the other side.  This time, try to listen only to the left side, and see if you can recognize the smooth beeps on just that side.
There will be {two} smooth beeps in your left ear.

>>>  #  play "Focus on" followed by self.standards[0]  but omit the "to say no" part for now
>>> self.play('both')

Once again, count how many smooth beeps there are in just the left ear. Afterwards, the voice will tell you how many smooth beeps there were on the left:  check that you got the correct number.

>>>  #  play "Focus on" followed by self.standards[0]  but omit the "to say no" part
>>> self.play('both')
>>> # play "The correct answer was: {3}"

Now let us try to recognize the smooth sounds playing in your right ear.
There will be {two} smooth beeps on that side.

>>>  #  play "Focus on" followed by self.standards[1]  but omit the "to say yes" part
>>> self.play('both')

Once again, count on the right.  Just like last time, the voice will tell you how many smooth beeps there were on the right:  again, check that you got the correct number.

>>>  #  play "Focus on" followed by self.standards[1]  but omit the "to say yes" part
>>> self.play('both')
>>> # play "The correct answer was: {2}"

In the end, when you use this system to communicate freely, you will focus your attention on the left sound stream in order to say "no",
and you will focus on the right sound stream when you want to say "yes".

We are about to do a calibration run, which means you will have to focus on whichever side the computer instructs.
To remind you of which side will mean no and which side will mean yes, the instructions will actually sound like this:

>>>  #  play "Focus on" followed by self.standards[1]  followed by "to say yes"
>>> self.play('both')
>>> # play "The correct answer was: {1}"

>>>  #  play "Focus on" followed by self.standards[0]  followed by "to say no"
>>> self.play('both')
>>> # play "The correct answer was: {3}"

"Focus on" + self.standards[0].play()+ " to say no"
self.play('both')
"The correct answer was: 3"

Count the number of smooth beeps in the ear that you are instructed while ignoring the sounds in the opposite ear. 
For now, always focus on the side that you are instructed. This will allow the computer to learn how to interpret your choices, for when you use the system to make free choices in future.

---training trials---

---load parameters---

The computer has some information from the training session to help interpret your choices.

When you focus on the left sounds, the computer interprets this as 'No'. When you focus on the right sounds, the computer interprets this as 'Yes'.

Let's try the listening exercise again.  Focus on the smooth beeps in the ear that you are instructed.  If the computer has correctly interpretted your choice, you will hear a confirmation Bell.

Everything is the same as before: you still count on the side that the computer instructs.  The bell may help you in learning to shift attention.
For now, don't worry if the bell does not sound very often. The computer still needs a few more calibration runs in order to learn how brain signals change when you're listening.  

It is very important that you focus on the instructed task. Do not purposely defy the instructions because doing so will limit the computer's ability to learn how to interpret your choices.
There will be opportunity to make free choices after the calibration sessions.

Focus on ___ to say Yes.
