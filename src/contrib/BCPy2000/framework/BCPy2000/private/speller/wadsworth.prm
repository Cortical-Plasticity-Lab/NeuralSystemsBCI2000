Source:Signal%20Properties:DataIOFilter       int       SamplingRate=                   512Hz         // sample rate
Source:Signal%20Properties:DataIOFilter       int       SampleBlockSize=                 16           // number of samples transmitted at a time

Source:Signal%20Properties:DataIOFilter       int       SourceCh=                         8           // number of digitized and stored channels
Source:Signal%20Properties:DataIOFilter       list      ChannelNames=             8      Fz       Cz       P3       Pz       P4       PO7      PO8      Oz       // list of channel names
Source:Signal%20Properties:DataIOFilter       floatlist SourceChOffset=           8       0        0        0        0        0        0        0        0       // Offset for channels in A/D units
Source:Signal%20Properties:DataIOFilter       floatlist SourceChGain=             8       1.0      1.0      1.0      1.0      1.0      1.0      1.0      1.0     // gain for each channel (A/D units -> muV)
Source:Online%20Processing:TransmissionFilter list      TransmitChList=           8       1        2        3        4        5        6        7        8       // list of transmitted channels
Source:gUSBampADC                             intlist   SourceChList=             8       1        2        3        4       13       14       15       16       // list of channels to digitize
Source:gUSBampADC                             intlist   SourceChDevices=          1       8                                                                                                                                                  // number of digitized channels per device

Source:gUSBampADC                             int       FilterEnabled=                    0           // Enable pass band filter (0=no, 1=yes)
Source:gUSBampADC                             float     FilterHighPass=                   0.1         // high pass filter for pass band
Source:gUSBampADC                             float     FilterLowPass=                    0           // low pass filter for pass band
Source:gUSBampADC                             int       FilterModelOrder=                 8           // filter model order for pass band
Source:gUSBampADC                             int       FilterType=                       1           // filter type for pass band (1=CHEBYSHEV, 2=BUTTERWORTH)

Source:gUSBampADC                             int       NotchEnabled=                     0           // Enable notch (0=no, 1=yes)

Source:Signal%20Properties:DataIOFilter       list      ReferenceChannelName=     1     TP10          // list of labels for reference channel or channels
Source:Signal%20Properties:DataIOFilter       list      GroundChannelName=        1     TP9           // label of the ground channel
Source:Playback                               int       EnslavePython=                    0           // force BCPy2000 modules to follow states supplied by the source module without being able to change them (boolean)

Source:Alignment:AlignmentFilter              int       AlignChannels=                    0           // align channels in time (0=no, 1=yes)
Source:Alignment:AlignmentFilter              floatlist SourceChTimeOffset=       0       %           // time offsets for all source channels (may be empty)

Storage:Documentation:BCI2000FileWriter       int       SavePrmFile=                      0           // save additional parameter file (0=no, 1=yes) (boolean)
Storage:Data%20Location:DataIOFilter          string    DataDirectory=              ..\data           // path to top level data directory (directory)
Storage:Session:DataIOFilter                  string    SubjectName=           2010XXXX_YZ_           // subject alias
Storage:Session:DataIOFilter                  string    SubjectSession=                 002           // three-digit session number
Storage:Session:DataIOFilter                  string    SubjectRun=                      00           // two-digit run number


Visualize:Timing:DataIOFilter                 int       VisualizeTiming=                  0           // visualize system timing (0=no, 1=yes) (boolean)
Visualize:Source%20Signal:DataIOFilter        int       VisualizeSource=                  1           // visualize raw brain signal (0=no, 1=yes) (boolean)
Visualize:Source%20Signal:DataIOFilter        int       VisualizeSourceDecimation=        1           // decimation factor for raw brain signal
Visualize:Source%20Signal:DataIOFilter        int       VisualizeSourceTime=              4           // how much time in Source visualization
Visualize:Source%20Signal:DataIOFilter        int       SourceMin=                       -1mV        // raw signal vis Min Value
Visualize:Source%20Signal:DataIOFilter        int       SourceMax=                        1mV        // raw signal vis Max Value
Visualize:Processing%20Stages                 int       VisualizeAlignmentFilter=         0           // Visualize AlignmentFilter output (boolean)
Visualize:Processing%20Stages                 int       VisualizeTransmissionFilter=      0           // Visualize TransmissionFilter output (boolean)
Visualize:Processing%20Stages                 int       VisualizeSpatialFilter=           0           // Visualize SpatialFilter output (boolean)
Visualize:Processing%20Stages                 int       VisualizePythonSigFilter=         0           // Visualize PythonSigFilter output (boolean)
Visualize:Processing%20Stages                 int       VisualizePythonAppFilter=         0           // Visualize PythonAppFilter output (boolean)


Filtering:SpatialFilter                       int       SpatialFilterType=                0           // spatial filter type 0: none, 1: full matrix, 2: sparse matrix, 3: common average reference (CAR) (enumeration)

PythonSig:Epoch                               int       CheckNumberOfEpochs=              1           // verify that the correct number of epochs has been trapped (boolean)
PythonSig:Epoch                               float     EpochDurationMsec=              600           // 
PythonSig:Epoch                               float     EpochLowerBoundMsec=            140           // after springing, each ERP trap will not spring again for this many milliseconds
PythonSig:Epoch                               string    TriggerChannel=                   %           // name of, or index to, the optical sync channel (leave blank if you dare to run without one)
PythonSig:Epoch                               float     TriggerThreshold=            350000           // 
PythonSig:Epoch                               float     TriggerHPCutoff=                  0.0         // 
PythonSig:Epoch                               floatlist ERPFilterFreqHz=            2     0.1   8     // lower and upper frequencies of bandpass filter for ERP feature set
PythonSig:Epoch                               int       ERPFilterOrder=                   6           // order of bandpass filter for ERP feature set
PythonSig:Epoch                               float     ERPClassifierBias=                0.0         // 
PythonSig:Epoch                               matrix    ERPClassifierWeights=     0 0                 // 

PythonApp:Task                                int       BlocksPerRun=                     1           // number of times to repeat the exercise
PythonApp:Task                                int       TrialsPerBlock=                 100           // maximum number of letters to spell
PythonApp:Task                                string    TextToSpell=                      THE         // string to copy-spell (leave blank for free-spelling)
PythonApp:Task                                string    TextResult=                       %           // initial content of the text result field

PythonApp:Window                              int       ScreenId=                         -1           // on which screen should the stimulus window be opened (zero-based: use -1 for last)
PythonApp:Window                              float     WindowSize=                       0.90         // size of the stimulus window, proportional to the screen

PythonApp:Debug                               int       ShowSignalTime=                   0           // show a timestamp based on the number of processed samples (boolean)
PythonApp:Debug                               int       SoundTest=                        1           // use sound to test the pipeline?: 0 no, 1 mono, 2 stereo, 3 surround (enumeration)
PythonApp:Debug                               float     SpatialSensitivity=               0.3         // the extent to which neighbouring grid locations cause false alarms in the sound test

PythonApp:Stimulus                            int       StimulusEvent=                    1           // stimulus event type: 1 flash, 2 horizontal-vertical rectangle flip (enumeration)
PythonApp:Stimulus                            float     SOAMsec=                        250           // stimulus onset asynchrony (period of stimulus events) in msec
PythonApp:Stimulus                            int       TransitionTimeLock=               0           // timelock presentation phases?: 0 no, 1 to packets, 2 to frames (enumeration)
PythonApp:Stimulus                            int       FlashFrames=                     11           // number of frames to stay highlighted during \"flash\" stimulus event
PythonApp:Stimulus                            matrix    Colors= { Background Low High } {Red Green Blue } 0.0 0.0 0.0   0.3 0.3 0.3    1.0 1.0 1.0    0.0 0.0 1.0 // colour scheme
PythonApp:Stimulus                            string    TargetFont=                      arial%20bold // target font name (leave blank for default monospaced)",
PythonApp:Stimulus                            float     TargetAspect=                     0.1         // target aspect ratio adjustment (>1.0 for shorter fatter, <1.0 for taller thinner)",
PythonApp:Stimulus                            float     SoundVolume=                      0.1         // master sound volume from 0.0 to 1.0
PythonApp:Window                              float     ScaleText=                        1.35        // scaling factor for text stimuli on the grid
PythonApp:Window                              float     ScaleImages=                      1.0         // scaling factor for image stimuli on the grid


EncDec:Encoding                               int       MinEpochsPerTrial=               20           // minimum number of epochs per attempt to transmit/receive one letter
EncDec:Encoding                               int       MaxEpochsPerTrial=               20           // maximum number of epochs per attempt to transmit/receive one letter
EncDec:Encoding                               float     ProbabilityThreshold=             1.0         // 
EncDec:Decoding                               float     MinimumProbability=               0.0         // minimum probability in predictive distributions (if 0, a small value is computed automatically)
EncDec:Decoding                               float     SmoothingExponent=                0.7         // exponent for crudely post-smoothing predictive distributions



PythonApp:Stimulus                            int       StartPage=                        1           // 
PythonApp:Stimulus                            matrix    Grid= 72 { Display Scale Row Column Page Action } A 1.0 1 1 1 %    B 1.0 1 2 1 %    C 1.0 1 3 1 %    D 1.0 1 4 1 %    E 1.0 1 5 1 %    F 1.0 1 6 1 %    G 1.0 1 7 1 %    H 1.0 1 8 1 %    I 1.0 2 1 1 %    J 1.0 2 2 1 %    K 1.0 2 3 1 %    L 1.0 2 4 1 %    M 1.0 2 5 1 %    N 1.0 2 6 1 %    O 1.0 2 7 1 %    P 1.0 2 8 1 %    Q 1.0 3 1 1 %    R 1.0 3 2 1 %    S 1.0 3 3 1 %    T 1.0 3 4 1 %    U 1.0 3 5 1 %    V 1.0 3 6 1 %    W 1.0 3 7 1 %    X 1.0 3 8 1 %    Y 1.0 4 1 1 %    Z 1.0 4 2 1 %    1 1.0 4 3 1 %    2 1.0 4 4 1 %    3 1.0 4 5 1 %    4 1.0 4 6 1 %    5 1.0 4 7 1 %    6 1.0 4 8 1 %    7 1.0 5 1 1 %    8 1.0 5 2 1 %    9 1.0 5 3 1 %    0 1.0 5 4 1 %    Sp 0.8 5 5 1 write('%20')    _ 1.2 5 6 1 %    . 1.6 5 7 1 %    , 1.4 5 8 1 %    ? 1.0 6 1 1 %    ! 1.0 6 2 1 %    ' 1.2 6 3 1 %    - 1.2 6 4 1 %    : 1.2 6 5 1 %    ; 1.2 6 6 1 %    / 1.0 6 7 1 %    images/arr-ret.png 3.5 6 8 1 write('*')    Bs 0.8 7 1 1 backspace    Del 0.7 7 2 1 write('*')    Tab 0.7 7 3 1 write('*')    Caps 0.6 7 4 1 write('*')    PgUp 0.6 7 5 1 write('*')    Home 0.6 7 6 1 write('*')    images/arr-up.png 3.5 7 7 1 write('*')    End 0.6 7 8 1 write('*')    Esc 0.7 8 1 1 write('*')    Ctrl 0.6 8 2 1 write('*')    Alt 0.6 8 3 1 write('*')    Shift 0.6 8 4 1 write('*')    PgDn 0.6 8 5 1 write('*')    images/arr-left.png 3.5 8 6 1 write('*')    images/arr-down.png 3.5 8 7 1 write('*')    images/arr-right.png 3.5 8 8 1 write('*')    @ 0.9 9 1 1 %    Load 0.6 9 2 1 write('*')    Save 0.6 9 3 1 write('*')    Help 0.6 9 4 1 write('*')    New 0.6 9 5 1 write('*')    Send 0.6 9 6 1 write('*')    Pause 0.5 9 7 1 write('*')    Sleep 0.5 9 8 1 write('*')
EncDec:Encoding                               matrix    Codebooks= 1 { Name Pages RandomizeTime RandomizeSpace Matrix } Checkerboard%209x8%20(24,72,2) 1 .$.$.$.$.$.$.$.$.$.$.$.$ .$.$.$.$$.$.$.$..$.$.$.$$.$.$.$..$.$.$.$$.$.$.$..$.$.$.$$.$.$.$..$.$.$.$ { matrix 72 24 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 }
EncDec:Encoding                               matrix    Codebooks= 1 { Name Pages RandomizeTime RandomizeSpace Matrix }  RC_mix%209x8%20(17,72,2) 1 1 0 { matrix 72 17 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 }
