// Import declarations for ActiChamp.h, generated by dylib_imports.sh
#ifndef ActiChamp_IMPORTS_H
#define ActiChamp_IMPORTS_H

#include "Win32Defs.h"

#if DYNAMIC_IMPORTS
#define champGetVersion champGetVersion_dbe7
#define champGetCount champGetCount_0561
#define champOpen champOpen_921b
#define champClose champClose_3d76
#define champGetSettingsEx champGetSettingsEx_98cc
#define champSetSettingsEx champSetSettingsEx_d41e
#define champGetSettings champGetSettings_3094
#define champSetSettings champSetSettings_c804
#define champGetProperty champGetProperty_ebdc
#define champStart champStart_f394
#define champStartExt champStartExt_db0b
#define champStop champStop_3893
#define champGetData champGetData_a149
#define champGetDataBlocking champGetDataBlocking_c90f
#define champGetDataStatus champGetDataStatus_c7c9
#define champGetErrorStatus champGetErrorStatus_6608
#define champGetTriggers champGetTriggers_e498
#define champSetTriggers champSetTriggers_d665
#define champImpedanceGetData champImpedanceGetData_90f7
#define champImpedanceGetSetup champImpedanceGetSetup_8119
#define champImpedanceSetSetup champImpedanceSetSetup_efc7
#define champImpedanceGetMode champImpedanceGetMode_7d53
#define champImpedanceSetMode champImpedanceSetMode_1b62
#define champSetElectrodes champSetElectrodes_df70
#define champGetVoltages champGetVoltages_3bed
#define champGetModules champGetModules_1412
#define champSetModules champSetModules_afbd
#define champGetMyButton champGetMyButton_54e9
#define champSetMyButtonLed champSetMyButtonLed_61b5
#define champSetActiveShieldGain champSetActiveShieldGain_e0f7
#define champGetError champGetError_2f23
#endif // DYNAMIC_IMPORTS

#include "ActiChamp.h"

#if DYNAMIC_IMPORTS
#undef champGetVersion
#undef champGetCount
#undef champOpen
#undef champClose
#undef champGetSettingsEx
#undef champSetSettingsEx
#undef champGetSettings
#undef champSetSettings
#undef champGetProperty
#undef champStart
#undef champStartExt
#undef champStop
#undef champGetData
#undef champGetDataBlocking
#undef champGetDataStatus
#undef champGetErrorStatus
#undef champGetTriggers
#undef champSetTriggers
#undef champImpedanceGetData
#undef champImpedanceGetSetup
#undef champImpedanceSetSetup
#undef champImpedanceGetMode
#undef champImpedanceSetMode
#undef champSetElectrodes
#undef champGetVoltages
#undef champGetModules
#undef champSetModules
#undef champGetMyButton
#undef champSetMyButtonLed
#undef champSetActiveShieldGain
#undef champGetError

extern "C" {
extern int (__stdcall *champGetVersion)(HANDLE hDevice, t_champVersion *Version);
extern unsigned int (__stdcall *champGetCount)(void);
extern HANDLE (__stdcall *champOpen)(unsigned int Number);
extern int (__stdcall *champClose)(HANDLE hDevice);
extern int (__stdcall *champGetSettingsEx)(HANDLE hDevice, t_champSettingsEx *SettingsEx);
extern int (__stdcall *champSetSettingsEx)(HANDLE hDevice, t_champSettingsEx *SettingsEx);
extern int (__stdcall *champGetSettings)(HANDLE hDevice, t_champSettings *Settings);
extern int (__stdcall *champSetSettings)(HANDLE hDevice, t_champSettings *Settings);
extern int (__stdcall *champGetProperty)(HANDLE hDevice, t_champProperty *Property);
extern int (__stdcall *champStart)(HANDLE hDevice);
extern int (__stdcall *champStartExt)(HANDLE hDevice, unsigned int Params);
extern int (__stdcall *champStop)(HANDLE hDevice);
extern int (__stdcall *champGetData)(HANDLE hDevice, void *Buffer, unsigned int Size);
extern int (__stdcall *champGetDataBlocking)(HANDLE hDevice, void *Buffer, unsigned int Size);
extern int (__stdcall *champGetDataStatus)(HANDLE hDevice, t_champDataStatus *DataStatus);
extern int (__stdcall *champGetErrorStatus)(HANDLE hDevice, t_champErrorStatus *ErrorStatus);
extern int (__stdcall *champGetTriggers)(HANDLE hDevice, unsigned int *Triggers);
extern int (__stdcall *champSetTriggers)(HANDLE hDevice, unsigned int Triggers);
extern int (__stdcall *champImpedanceGetData)(HANDLE hDevice, unsigned int *Buffer, unsigned int Size);
extern int (__stdcall *champImpedanceGetSetup)(HANDLE hDevice, t_champImpedanceSetup *Setup);
extern int (__stdcall *champImpedanceSetSetup)(HANDLE hDevice, t_champImpedanceSetup *Setup);
extern int (__stdcall *champImpedanceGetMode)(HANDLE hDevice, t_champImpedanceMode *Mode);
extern int (__stdcall *champImpedanceSetMode)(HANDLE hDevice, t_champImpedanceMode *Mode);
extern int (__stdcall *champSetElectrodes)(HANDLE hDevice, unsigned int *Buffer, unsigned int Size);
extern int (__stdcall *champGetVoltages)(HANDLE hDevice, t_champVoltages *Voltages);
extern int (__stdcall *champGetModules)(HANDLE hDevice, t_champModules *Modules);
extern int (__stdcall *champSetModules)(HANDLE hDevice, t_champModules *Modules);
extern int (__stdcall *champGetMyButton)(HANDLE hDevice, t_champMyButton *MyButton);
extern int (__stdcall *champSetMyButtonLed)(HANDLE hDevice, unsigned int Period, unsigned int DutyCycle);
extern int (__stdcall *champSetActiveShieldGain)(HANDLE hDevice, unsigned int Gain);
extern int (__stdcall *champGetError)(HANDLE hDevice, int *Code, char *Buffer, unsigned int Size);
}
#endif // DYNAMIC_IMPORTS

namespace Dylib { bool ActiChamp_Loaded(); }

#endif // ActiChamp_IMPORTS_H
