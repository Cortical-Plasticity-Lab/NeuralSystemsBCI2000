#!/bin/bash
# Proof of concept for an automated "new filter from template" utility 
# To be implemented in C++, in the end
# 
# ./newfilter ../src/custom/MyProject/FooFilter.cpp
# ./newfilter FooFilter ../src/custom/MyProject
# 
# the two syntaxes are equivalent

set -e

PARENT=`dirname "$1"`
NAME=`basename "$1" | sed 's/\\.cpp$//' | sed 's/\\.h$//'`
test "$2" && PARENT="$2"

test "$PARENT" || echo "must specify parent directory (project directory)"
test "$PARENT" || exit 1
test -d "$PARENT" || echo "$PARENT is not a directory"
test -d "$PARENT" || exit 1
ILLEGAL=`echo "$NAME"|sed s/[A-Za-z0-9_]//g`
test "$ILLEGAL" && echo "illegal filter name $NAME (may only contain alphanumerics and underscore)"
test "$ILLEGAL" && exit 1
ILLEGAL=`echo "$NAME"|head -c 1|sed s/[A-Za-z]//`
test "$ILLEGAL" && echo "illegal filter name $NAME (may not start with a numeric character)"
test "$ILLEGAL" && exit 1

TEMPLATES=./buildutils/templates
SRCNAME="$NAME.cpp"
HDRNAME="$NAME.h"

FILE="$PARENT/$SRCNAME"
test -f "$FILE" && echo "file $FILE already exists - leaving it unchanged" ; test -f "$FILE" || \
(cat "$TEMPLATES/NewFilter.cpp"      | sed "s/\\\`/$NAME/g" > "$FILE" && echo "created $FILE" )

FILE="$PARENT/$HDRNAME"
test -f "$FILE" && echo "file $FILE already exists - leaving it unchanged" ; test -f "$FILE" || \
(cat "$TEMPLATES/NewFilter.h"        | sed "s/\\\`/$NAME/g" > "$FILE" && echo "created $FILE" )

FILE="$PARENT/CMakeLists.txt"
test -f "$FILE" || echo "could not find $FILE"
test -f "$FILE" || exit 1

OPENING='[ \t]*SET\s*\(\s*'
STUFF='[^\)]*'
CLOSING='\)'

perl <<EOF
open FILE, "$FILE";
\$a = join("", <FILE>);

if(\$a =~ m/${OPENING}SRC_PROJECT$STUFF\s+$SRCNAME\s+$STUFF/ ) { print "$FILE already includes $SRCNAME SRC_PROJECT\n"; }
else { \$a =~ s/(${OPENING}SRC_PROJECT)($STUFF)($CLOSING)/\$1\$2  $SRCNAME\n\$3/s; print "added $SRCNAME to SRC_PROJECT in $FILE\n"; }

if(\$a =~ m/${OPENING}HDR_PROJECT$STUFF\s+$HDRNAME\s+$STUFF/ ) { print "$FILE already includes $HDRNAME HDR_PROJECT\n"; }
else { \$a =~ s/(${OPENING}HDR_PROJECT)($STUFF)($CLOSING)/\$1\$2  $HDRNAME\n\$3/s; print "added $HDRNAME to HDR_PROJECT in $FILE\n"; }

close FILE;
open FILE, ">$FILE";
print FILE \$a;
#print \$a;
EOF

echo " "