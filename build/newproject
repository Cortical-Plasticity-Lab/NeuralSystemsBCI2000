#!/bin/bash
# Proof of concept for an automated "new project from template" utility 
# To be implemented in C++, in the end
# 
# ./newproject SignalProcessing Blah
# ./newproject SignalProcessing Blah ../src/contrib
# 
# (if no location is specified,  ../src/custom is used)

MODTYPE="$1"
NAME="$2"
PARENT="$3"

DEFAULTPARENT=../src/custom
TEMPLATES=./buildutils/templates

set -e

test "$MODTYPE" == "1" && MODTYPE="SignalSource"
test "$MODTYPE" == "2" && MODTYPE="SignalProcessing"
test "$MODTYPE" == "3" && MODTYPE="Application"
test "$MODTYPE" == "SignalSource" || \
test "$MODTYPE" == "SignalProcessing" || \
test "$MODTYPE" == "Application" || \
MODTYPE=""
test "$MODTYPE" || echo 'first argument must be "SignalSource", "SignalProcessing" or "Application"'
test "$MODTYPE" || exit 1

test "$NAME" || echo "must supply a project name as the second argument" 
test "$NAME" || exit 1

test "$PARENT" || echo "no location specified: using default location $DEFAULTPARENT"
test "$PARENT" || PARENT="$DEFAULTPARENT"

PROJ="$PARENT/$NAME"
#OLDD="$PWD" && cd "$PROJ" && PROJ="$PWD" && cd "$OLDD"

echo " "
test -d "$PROJ" && echo "directory $PROJ already exists"
test -d "$PROJ" || ( mkdir -p "$PROJ" && echo "A new $MODTYPE project has been created at $PROJ")

FILE="$PROJ/CMakeLists.txt"
test -f "$FILE" && echo "    file $FILE already exists - leaving it unchanged" ; test -f "$FILE" || \
(cat "$TEMPLATES/CMakeLists-$MODTYPE.txt" | sed "s/\\\`/$NAME/g" > "$FILE" && echo "    created $FILE" )

FILE="$PROJ/$NAME.cpp"
test -f "$FILE" && echo "    file $FILE already exists - leaving it unchanged" ; test -f "$FILE" || \
(cat "$TEMPLATES/main.cpp"                | sed "s/\\\`/$NAME/g" > "$FILE" && echo "    created $FILE" )

FILE="$PROJ/PipeDefinition.cpp"
test -f "$FILE" && echo "    file $FILE already exists - leaving it unchanged" ; test -f "$FILE" || \
test "$MODTYPE" == SignalProcessing && \
(cat "$TEMPLATES/PipeDefinition.cpp"      | sed "s/\\\`/$NAME/g" > "$FILE" && echo "    created $FILE" )

#echo " "
#ls -lh "$PROJ" | grep -v '^total'
echo " "

FILE="$PARENT/CMakeLists.txt"
LINE="ADD_SUBDIRECTORY( $NAME )"
(test -f "$FILE" && grep -q "$LINE" "$FILE" && echo "$FILE already contains the line $LINE") || \
(echo "$LINE" >> "$FILE" && echo "The following line has also been added to $FILE" && echo "     $LINE" )

test "$PARENT" == "$DEFAULTPARENT" || \
(echo "*** HOWEVER you may need add ADD_SUBDIRECTORY lines in other locations to"  && \
echo "ensure that cmake gets this far. To avoid this problem, use the default" && \
echo "location $DEFAULTPARENT" )
echo " "

echo "Run CMake again to ensure that this new project is included in the build. "
echo "To expand the project, edit $PROJ/CMakeLists.txt"
test "$MODTYPE" == SignalProcessing && \
echo "                        and $PROJ/PipeDefinition.cpp"
echo " "