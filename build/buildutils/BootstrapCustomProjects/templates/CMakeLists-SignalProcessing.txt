###########################################################################
## $Id:  $
## Authors:
## Description: Build information for the ` project
##              
##              
###########################################################################

# Set the executable name
SET( EXECUTABLE_NAME ` )

# Set the project specific sources
SET( SRC_PROJECT
  `.cpp            # You probably will not need to edit this file
  PipeDefinition.cpp         # but you should certainly edit this one
  # MyNewCustomFilter.cpp    # and presumably you will be writing custom filters. This is where they go.
)

SET( HDR_PROJECT
  # MyNewCustomFilter.h      # Don't forget the corresponding headers
)

# Use the BCI2000_INCLUDE macro if you need to link with frameworks from /src/extlib:
# BCI2000_INCLUDE( "MATLAB" )

# We're done. Add the signal processing module to the Makefile or compiler project file:
BCI2000_ADD_SIGNAL_PROCESSING_MODULE( 
  "${EXECUTABLE_NAME}" 
  "${SRC_PROJECT}" "${HDR_PROJECT}" 
)

# You may also find it useful to produce a command-line version of your filters, for offline processing:
# BCI2000_ADD_CMDLINE_FILTER( MyNewCustomFilter )
# BCI2000_ADD_CMDLINE_FILTER( MyOtherCustomFilter   # a more complicated example, with dependencies
#                             INCLUDING "MATLAB"
#                             EXTRA_SOURCES ${BCI2000_SRC_DIR}/core/SignalProcessing/Matlab/MatlabWrapper.cpp
#                             EXTRA_HEADERS ${BCI2000_SRC_DIR}/core/SignalProcessing/Matlab/MatlabWrapper.h
#                           )
