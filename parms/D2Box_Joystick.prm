Filtering int AlignChannels= 0 0 0 1 // align channels in time (0=no, 1=yes)
System string ApplicationIP= 127.0.0.1 127.0.0.1 127.0.0.1 127.0.0. // this module's listening IP
System string ApplicationPort= 2040 4200 1024 32768 // this module's listening port
Storage int AutoIncrementRunNo= 1 1 0 1 // 0: no auto increment 1: auto increment at Initialize)
Statistics matrix BaselineCfg= 2 2 TargetCode 1 TargetCode 2 0 0 0 // states to watch for baseline
Statistics matrix BaselineHits= 2 2 1 0.50 2 0.50 0 0 0 // proportion correct for each target
UsrTask int BaselineInterval= 1 0 0 1 // Intercept Computation 1 = targets 2 = ITI
Filtering int ClassMode= 1 0 1 2 // Classifier mode 1= simple 2= interaction
UsrTask int CursorSize= 25 0 0 1 // User Window Cursor Size
Source int DCoffset= 0 0 -32767 32767 // DC offset (common to all channels)
MEMFilter float deltaMem= 0.2 0.2 0.02 2.00 // Resolution (line density)
Statistics float DesiredPixelsPerSec= 50.00 70 0 400 // Desired pixels per second
System string EEGsourceIP= 127.0.0.1 127.0.0.1 127.0.0.1 127.0.0.1 // this module's listening IP
System string EEGsourcePort= 2036 4200 1024 32768 // this module's listening port
UsrTask int FeedbackDuration= 20000 0 0 1 // Max Trial Duration
Storage string FileInitials= ..\data\ a z 0 // Initials of file name (max. 8 characters)
Statistics float HorizInterceptProp= 1.0 0.0 0.0 2.0 // Proportion of horizontal signal intercept
Statistics int HorizTrendControl= 1 0 0 2 // Adaption of Horizontal % Correct Trend 1= Lin 2 = Quad
Targets int IncludeAllTargets= 1 0 0 1 // Test all target positions?
Statistics int InterceptControl= 1 0 0 2 // Online adaption of Intercept 1 = Up/Dn  2 = Up/Dn + Le/Ri
Statistics int InterceptLength= 3 0 0 1000 // Length of time for running average
Statistics float InterceptProportion= 0.9801 0.0 0.0 2.0 // Proportion of signal mean for intercept
UsrTask int ItiDuration= 10 0 0 1 // Duration of Intertrial Interval
JoyStick float JoyXgain= 4.0 0 -1000.0 1000.0 // Horizontal gain
JoyStick float JoyYgain= 4.0 0 -1000.0 1000.0 // Horizontal gain
Statistics float LinTrendLrnRt= -0.001 0 0.000 0.010 // Learning Rate for Linear Trend Control
Statistics float LRPixelsPerSec= 0 70 0 400 // Horizontal Pixel Rate
Filtering float LR_A= -5.00 -5.0 -100.0 100.0 // Normal Filter Left/Right Intercept
Filtering float LR_B= 5.00 5.0 0.0 100.0 // Normal Filter Left/Right Slope
Filtering int MaxChannels= 256 10 1 256 // maximum number of channels in signals B,C
Filtering int MaxElements= 256 10 1 256 // maximum number of elements in signals B,C
MEMFilter float MemBandWidth= 3.0 3.0 0.5 32.0 // Spectral Bandwidth in Hz
MEMFilter int MemDetrend= 0 0 0 2 // Detrend data?  0=no 1=mean 2= linear
MEMFilter int MemModelOrder= 10 10 2 32 // AR model order
MEMFilter int MemWindows= 8 2 1 8 // AR- number of input blocks
Filtering matrix MLR= 10 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 64 0 100 // Class Filter Left / Right Weights
Source int ModulateAmplitude= 0 0 0 1 // modulate the amplitude with the mouse (0=no, 1=yes)
Filtering matrix MUD= 10 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 64 0 100 // Class Filter Additive Up / Down Weights
Source int NoiseMaxAmplitude= 3000 3000 -32767 32767 // the maximum output value for noise
Source int NoiseMinAmplitude= -3000 0 -32767 32767 // the minimal output value for noise
Targets int NumberTargets= 4 0 0 1 // Number of Targets
Filtering int NumControlSignals= 2 1 1 128 // the number of transmitted control signals
UsrTask int PreTrialPause= 10 0 0 1 // Duration of Target w/o cursor
Statistics float QuadTrendLrnRt= 0.001 0 0 0.010 // Learning Rate for Linear Trend Control
UsrTask int RestingPeriod= 0 0 0 1 // 1 defines a rest periuod of data acquisition
UsrTask int RewardDuration= 10 0 0 1 // Duration of PostTrial Feedback
Source int SampleBlockSize= 8 5 1 128 // the number of samples transmitted at a time
Source int SamplingRate= 256 128 1 4000 // the sample rate
Storage int SavePrmFile= 0 1 0 1 // 0/1: don't save/save additional parameter file
System string SignalProcessingIP= 127.0.0.1 127.0.0.1 127.0.0.1 127.0.0.1 // this module's listening IP
System string SignalProcessingPort= 2038 4200 1024 32768 // this module's listening port
Source int SineChannel= 0 0 0 128 // channel number of sinewave (0=all)
Source float SineFrequency= 10 10 0 100 // frequency of the sine wave
Source int SineMaxAmplitude= 10000 20000 -32767 32767 // the maximum output value for sine
Source int SineMinAmplitude= -10000 0 -32767 32767 // the minimal output value for sine
Source int SoftwareCh= 16 16 1 128 // the number of digitized and stored channels
Filtering floatlist SourceChGain= 4 0.008 0.008 0.008 0.008 0.033 -500 500 // gain for each channel (A/D units -> muV)
Filtering floatlist SourceChOffset= 4 0 0 0 0 0 -500 500 // offset for channels in A/D units
Visualize int SourceMax= 8092 8092 0 16386 // raw signal vsi Max Value
Visualize int SourceMin= 0 0 -8092 0 // raw signal vis Min Value
Filtering int SpatialFilteredChannels= 4 2 1 64 // Number of Spatially Filtered Channels
Filtering matrix SpatialFilterKernal= 4 4 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 64 -100 100 // Spatial Filter Kernal Weights
MEMFilter float StartMem= 0.0 0.0 0.0 512.0 // Start of Spectrum in Hz
System int StateVectorLength= 16 16 1 30 // length of the state vector in bytes
MEMFilter float StopMem= 60.0 30.0 0.0 512.0 // End of Spectrum in Hz
Storage string StorageTime= 16:15 Time a z // time of beginning of data storage
Storage string SubjectName= test Name a z // subject alias (max. 8 characters)
Storage string SubjectRun= 01 00 0 99 // digit run number (max. 3 characters)
Storage string SubjectSession= 001 001 0 999 // session number (max. 3 characters)
Targets matrix TargetPos= 7 4 25 25 0 90 0 90 25 25 50 50 10 10 10 10 50 50 0 0 -1 1 -1 1 0 0 0 0 0 0 0 0 0 // Target Position Matrix - Values are 0-100
UsrTask int TimeLimit= 180 180 0 1000 // Time Limit for Runs in seconds
Source int TransmitCh= 4 4 1 128 // the number of transmitted channels
Source intlist TransmitChList= 4 1 2 3 4 1 1 128 // list of transmitted channels (# of channels MUST equal TransmitCh)
Statistics int TrendControl= 1 0 0 2 // Online adaption of % Correct Trend 1= Lin 2 = Quad
Statistics int TrendWinLth= 20 0 0 100 // Length of % Correct Window
Filtering float UD_A= 0.00 5.0 -100.0 100.0 // Normal Filter Up / Down Intercept
Filtering float UD_B= 5000.00 5.0 -100.0 100.0 // Normal Filter Up / Down Slope
JoyStick int UseJoyStick= 1 0 0 1 // 1 to use Joystick Input
Visualize int VisualizeCalibration= 0 0 0 1 // visualize calibrated channels (0=no, 1=yes)
Visualize int VisualizeClassFiltering= 0 0 0 1 // visualize Class filtered signals (0=no 1=yes)
Visualize int VisualizeNormalFiltering= 0 0 0 1 // visualize Normal filtered signals (0=no 1=yes)
Visualize int VisualizeRoundtrip= 1 1 0 1 // visualize roundtrip time (0=no, 1=yes)
Visualize int VisualizeSource= 1 1 0 1 // visualize raw brain signal (0=no, 1=yes)
Visualize int VisualizeSourceDecimation= 1 1 0 1 // decimation factor for raw brain signal
Visualize int VisualizeSourceTime= 2 2 0 5 // how much time in Source visualization
Visualize int VisualizeSpatialFiltering= 0 0 0 1 // visualize spatial filtered signals (0=no 1=yes)
Visualize int VisualizeStatFiltering= 0 0 0 1 // visualize Stat filtered signals (0=no 1=yes)
Visualize int VisualizeTemporalFiltering= 1 0 0 1 // visualize Temporal filtered signals (0=no 1=yes)
Statistics matrix WeightControl= 3 1 Xadapt Yadapt AdaptCode 0 0 0 // State Names controlling Classifier Adaptation
Statistics int WeightUse= 0 0 0 2 // Use of weights 0 = not 1= compute 2= use 
UsrTask int WinHeight= 512 0 0 1 // User Window Height
UsrTask int WinWidth= 512 0 0 1 // User Window Width
UsrTask int WinXpos= 400 0 0 1 // User Window X location
UsrTask int WinYpos= 5 0 0 1 // User Window Y location
Statistics float WtLrnRt= 0.001 0 0.000 0.010 // Rate of Learning for Classifier 
